{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/conclusion/conclusion.component.html","webpack:///./src/app/conclusion/conclusion.component.ts","webpack:///./src/app/introduction/introduction.component.html","webpack:///./src/app/introduction/introduction.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./input-output/input-output.module\": [\n\t\t\"./src/app/input-output/input-output.module.ts\",\n\t\t\"input-output-input-output-module~sharing-variables-sharing-variables-module\",\n\t\t\"input-output-input-output-module\"\n\t],\n\t\"./messenger/messenger.module\": [\n\t\t\"./src/app/messenger/messenger.module.ts\",\n\t\t\"messenger-messenger-module\"\n\t],\n\t\"./outlet/outlet.module\": [\n\t\t\"./src/app/outlet/outlet.module.ts\",\n\t\t\"outlet-outlet-module\"\n\t],\n\t\"./sharing-variables/sharing-variables.module\": [\n\t\t\"./src/app/sharing-variables/sharing-variables.module.ts\",\n\t\t\"input-output-input-output-module~sharing-variables-sharing-variables-module\",\n\t\t\"sharing-variables-sharing-variables-module\"\n\t],\n\t\"./url-params/url-params.module\": [\n\t\t\"./src/app/url-params/url-params.module.ts\",\n\t\t\"url-params-url-params-module\"\n\t],\n\t\"./web-storage/web-storage.module\": [\n\t\t\"./src/app/web-storage/web-storage.module.ts\",\n\t\t\"web-storage-web-storage-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IntroductionComponent } from './introduction/introduction.component';\nimport { ConclusionComponent } from './conclusion/conclusion.component';\n\nconst appRoutes: Routes = [\n\t{ path: 'introduction', component: IntroductionComponent },\n\t{ path: '', redirectTo: 'introduction', pathMatch: 'full' },\n\t{ path: 'sharing-variables', loadChildren: './sharing-variables/sharing-variables.module#SharingVariablesModule' },\n\t{ path: 'web-storage', loadChildren: './web-storage/web-storage.module#WebStorageModule' },\n\t{ path: 'url-params', loadChildren: './url-params/url-params.module#UrlParamsModule' },\n\t{ path: 'outlet', loadChildren: './outlet/outlet.module#OutletModule' },\n\t{ path: 'input-output', loadChildren: './input-output/input-output.module#InputOutputModule' },\n\t{ path: 'messenger', loadChildren: './messenger/messenger.module#MessengerModule' },\n\t{ path: 'conclusion', component: ConclusionComponent }\n];\n\n@NgModule({\n\timports: [ RouterModule.forRoot(appRoutes, { useHash: true }) ],\n\texports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"title text-center\\\"> Angular Tutorial </h1>\\n<div class=\\\"main\\\">\\n\\t<router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule, Title } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { IntroductionComponent } from './introduction/introduction.component';\nimport { ConclusionComponent } from './conclusion/conclusion.component';\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tIntroductionComponent,\n\t\tConclusionComponent\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tAppRoutingModule\n\t],\n\tproviders: [ Title ],\n\tbootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","module.exports = \"<button class=\\\"navigation\\\" (click)=\\\"previousPage()\\\"> Previous </button>\\n\\n<h3 class=\\\"conclusion\\\"> Thank you for reading my tutorial, I appreciate your <a href=\\\"https://github.com/aggelos24/angular-components-communication/issues\\\">feedback</a>. </h3>\"","import { Component, OnInit, HostListener } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n\tselector: 'app-conclusion',\n\ttemplateUrl: './conclusion.component.html'\n})\nexport class ConclusionComponent implements OnInit {\n\tconstructor(private router: Router, private titleService: Title) {}\n\t\n\t@HostListener('document:keydown', ['$event'])\t\t\t\t\t\t//when key is pressed\n\thandleKeyboardEvent(event: KeyboardEvent) {\n\t\tif (event.key == 'ArrowLeft') {\t\t\t\t\t\t\t//if left arrow is pressed\n\t\t\tthis.previousPage();\t\t\t\t\t\t\t\t\t\t\t\t//go to previous page\n\t\t}\n\t}\n\t\n\tngOnInit() {\n\t\tthis.titleService.setTitle(\"Communication between Components\");\t\t\t//set document title\n\t}\n\t\n\tpreviousPage() {\n\t\tthis.router.navigate(['/messenger']);\t\t\t\t\t\t//navigate to\n\t}\n}\n","module.exports = \"<div class=\\\"flex-container\\\">\\n\\t<button class=\\\"navigation invisible\\\"> Previous </button>\\n\\t<button class=\\\"navigation\\\" (click)=\\\"nextPage()\\\"> Next </button>\\n</div>\\n<div class=\\\"px-20px\\\">\\n\\t<h3 class=\\\"text-center\\\"> Communication between Components </h3>\\n\\t<p>\\n\\t\\tI started learning Angular this year. When I have a question, I always go to \\n\\t\\t<a class=\\\"no-break\\\" href=\\\"https://angular.io\\\" target=\\\"_blank\\\"> angular's  official site </a> to find the answer, and I believe \\n\\t\\tthat it is the best source about Angular. However, I had trouble finding simple methods to make components communicate with each \\n\\t\\tother, because angular's official site includes few methods and doesnt explains which method is suitable for which use case. \\n\\t\\tThis is the official documentation about \\n\\t\\t<a class=\\\"no-break\\\" href=\\\"https://angular.io/guide/component-interaction\\\" target=\\\"_blank\\\">Component Interaction</a>.\\n\\t</p>\\n\\t<p>\\n\\t\\tNow, I am more experienced so I made this tutorial to help novice web developers choose a method depending on their needs. \\n\\t\\tIt includes 6 different methods from easiest to hardest.\\n\\t</p>\\n\\t<span> You can navigate through the pages with left and right arrows (&#8592; and &#8594;). </span>\\n</div>\"","import { Component, OnInit, HostListener } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n\tselector: 'app-introduction',\n\ttemplateUrl: './introduction.component.html'\n})\nexport class IntroductionComponent implements OnInit {\n\tconstructor(private router: Router, private titleService: Title) {}\n\t\n\t@HostListener('document:keydown', ['$event'])\t\t\t\t\t\t//when key is pressed\n\thandleKeyboardEvent(event: KeyboardEvent) {\n\t\tif (event.key == 'ArrowRight') {\t\t\t\t\t\t//if right arrow is pressed\n\t\t\tthis.nextPage();\t\t\t\t\t\t\t\t\t\t\t\t\t//go to next page\n\t\t}\n\t}\n\t\n\tngOnInit() {\n\t\tthis.titleService.setTitle(\"Communication between Components\");\t\t\t//set document title\n\t}\n\n\tnextPage() {\n\t\tthis.router.navigate(['/sharing-variables']);\t\t\t\t\t//navigate to\n\t}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}