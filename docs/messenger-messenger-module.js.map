{"version":3,"sources":["webpack:///./src/app/messenger/first/first.component.html","webpack:///./src/app/messenger/first/first.component.ts","webpack:///./src/app/messenger/messenger-routing.module.ts","webpack:///./src/app/messenger/messenger.module.ts","webpack:///./src/app/messenger/messenger.service.ts","webpack:///./src/app/messenger/messenger/messenger.component.html","webpack:///./src/app/messenger/messenger/messenger.component.ts","webpack:///./src/app/messenger/second/second.component.html","webpack:///./src/app/messenger/second/second.component.ts"],"names":[],"mappings":"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","file":"messenger-messenger-module.js","sourcesContent":["module.exports = \"<div class=\\\"mt-10px ml-5px\\\">\\n\\t<input type=\\\"text\\\" class=\\\"mt-5px\\\" #firstName placeholder=\\\"First Name\\\"> <br>\\n\\t<input type=\\\"text\\\" class=\\\"mt-5px\\\" #lastName placeholder=\\\"Last Name\\\"> <br>\\n\\t<input type=\\\"text\\\" class=\\\"mt-5px\\\" #address placeholder=\\\"Address\\\"> <br>\\n\\t<button class=\\\"submit mt-5px\\\" (click)=\\\"sendMessage(firstName.value, lastName.value, address.value)\\\"> Send Message </button>\\n</div>\\n\"","import { Component } from '@angular/core';\n\nimport { MessengerService } from '../messenger.service';\n\nimport { Message } from '../../interfaces/Message';\n\n@Component({\n\tselector: 'app-first',\n\ttemplateUrl: './first.component.html'\n})\nexport class FirstComponent {\n\tmessage: Message;\t\t\t\t\t\t\t\t//variable for storing data for message\n\t\n\tconstructor(private messengerService: MessengerService) {}\n\t\n\tsendMessage(firstName: string, lastName: string, address: string) {\n\t\tthis.message = {\t\t\t\t\t\t\t//create message from form data\n\t\t\tto: 'SecondComponent',\n\t\t\tdata: {\n\t\t\t\tfirstName: firstName,\n\t\t\t\tlastName: lastName,\n\t\t\t\taddress: address\n\t\t\t}\n\t\t};\n\t\t\n\t\tthis.messengerService.setMessage(this.message);\t\t\t\t//send message\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MessengerComponent } from './messenger/messenger.component';\n\nconst routes: Routes = [\n\t{ path: '', component: MessengerComponent }\n];\n\n@NgModule({\n\timports: [ RouterModule.forChild(routes) ],\n\texports: [ RouterModule ]\n})\nexport class MessengerRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MessengerRoutingModule } from './messenger-routing.module';\n\nimport { MessengerService } from './messenger.service';\n\nimport { MessengerComponent } from './messenger/messenger.component';\nimport { FirstComponent } from './first/first.component';\nimport { SecondComponent } from './second/second.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tMessengerRoutingModule\n\t],\n\tdeclarations: [\n\t\tMessengerComponent,\n\t\tFirstComponent,\n\t\tSecondComponent\n\t],\n\tproviders: [ MessengerService ]\n})\nexport class MessengerModule { }\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Message } from '../interfaces/Message';\n\n\n@Injectable()\nexport class MessengerService {\n\tprivate messageSource = new BehaviorSubject<Message>(null);\t\t//create BehaviorSubject with null as initial value\n\tmessage = this.messageSource.asObservable();\t\t\t\t//this is the variable to which recipients subscribe\n\t\n\tsetMessage(message: Message) {\t\t\t\t\t\t//this is called by the sender with the message it wants to send\t\t\t\t\t\n\t\tthis.messageSource.next(message);\t\t\t\t//message is emitted\n\t}\n}\n","module.exports = \"<div class=\\\"flex-container\\\">\\n\\t<button class=\\\"navigation\\\" (click)=\\\"previousPage()\\\"> Previous </button>\\n\\t<button class=\\\"navigation\\\" (click)=\\\"nextPage()\\\"> Next </button>\\n</div>\\n<div class=\\\"px-20px\\\">\\n\\t<h3 class=\\\"text-center\\\"> 6. Messenger Service </h3>\\n\\t<p>\\n\\t\\tWe create a service which has a \\n\\t\\t<a href=\\\"http://reactivex.io/rxjs/manual/overview.html#behaviorsubject\\\" target=\\\"_blank\\\"> BehaviorSubject </a> and inject it into \\n\\t\\tboth the sender and the recipients. A <i> BehaviorSubject </i> stores the last emitted value from sender. When a recipient \\n\\t\\tsubscribes to <i> BehaviorSubject </i>, it receives its current value and every emitted value after that until it unsubscribes.\\n\\t\\tThis is an advantage over a <a href=\\\"http://reactivex.io/rxjs/manual/overview.html#subject\\\" target=\\\"_blank\\\">Subject</a>, because if \\n\\t\\twe use a <i> Subject </i> and the sender emits a message before the recipient subscribes, the message will be lost.\\n\\t</p>\\n\\t<p>\\n\\t\\t<b class=\\\"red-letters\\\"> Con: </b> If there are multiple senders at the same time, some messages may be lost.\\n\\t</p>\\n\\t\\n\\t<div class=\\\"component-container mt-5px\\\">\\n\\t\\tFirst Component <br>\\n\\t\\t<app-first></app-first>\\n\\t</div>\\n\\n\\t<div class=\\\"component-container mt-5px\\\">\\n\\t\\tSecond Component <br>\\n\\t\\t<app-second></app-second>\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit, HostListener } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n\tselector: 'app-messenger',\n\ttemplateUrl: './messenger.component.html'\n})\nexport class MessengerComponent implements OnInit {\n\tconstructor(private router: Router, private titleService: Title) {}\n\t\n\t@HostListener('document:keydown', ['$event'])\t\t\t\t//when key is pressed\n\thandleKeyboardEvent(event: KeyboardEvent) {\n\t\tif (event.key == 'ArrowRight') {\t\t\t\t//if right arrow is pressed\n\t\t\tthis.nextPage();\t\t\t\t\t\t\t\t\t\t\t\t\t//go to next page\n\t\t}\n\t\telse if (event.key == 'ArrowLeft') {\t\t\t\t//if left arrow is pressed\n\t\t\tthis.previousPage();\t\t\t\t\t\t\t\t\t\t\t\t//go to previous page\n\t\t}\n\t}\n\t\n\tngOnInit() {\n\t\tthis.titleService.setTitle(\"Messenger Service\");\t\t//set document title\n\t}\n\t\n\tpreviousPage() {\n\t\tthis.router.navigate(['/outlet']);\t\t\t\t//navigate to\n\t}\n\n\tnextPage() {\n\t\tthis.router.navigate(['/conclusion']);\t\t\t//navigate to\n\t}\n}\n","module.exports = \"<div class=\\\"mt-10px ml-5px\\\">\\n\\t<ng-container *ngIf=\\\"!noData; else elseTemplate\\\">\\n\\t\\t<b> Message </b> <br>\\n\\t\\tTo: {{ message.to }} <br>\\n\\t\\tData: <br>\\n\\t\\t<div class=\\\"ml-5px\\\">\\n\\t\\t\\tFirst Name: {{ message.data.firstName }} <br>\\n\\t\\t\\tLast Name: {{ message.data.lastName }} <br>\\n\\t\\t\\tAddress: {{ message.data.address }} <br>\\n\\t\\t</div>\\n\\t</ng-container>\\n\\t<ng-template #elseTemplate> No data yet </ng-template>\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { MessengerService } from '../messenger.service';\n\nimport { Message } from '../../interfaces/Message';\n\n@Component({\n\tselector: 'app-second',\n\ttemplateUrl: './second.component.html'\n})\nexport class SecondComponent implements OnInit, OnDestroy {\n\tsub: Subscription;\t\t\t\t\t\t\t\t\t//variable for managing subscription\n\t\n\tmessage: Message;\t\t\t\t\t\t\t\t\t//variable for storing data from message\n\t\n\tnoData: boolean;\t\t\t\t\t\t\t\t\t//true if no data have been received\n\t\n\tconstructor(private messengerService: MessengerService) {}\n\n\tngOnInit() {\n\t\tthis.noData = true;\t\t\t\t\t\t\t\t//initialize variable\n\t\t\n\t\tthis.sub = this.messengerService.message.pipe(\n\t\t\tfilter(message => (message && message.to == 'SecondComponent'))\t\t//reject message if message's recipient is not this component\n\t\t)\n\t\t.subscribe(message => {\t\t\t\t\t\t\t\t//subscribe to service's response\n\t\t\t\tthis.message = message;\t\t\t\t\t\t//update variables\n\t\t\t\tthis.noData = false;\n\t\t});\n\t}\n\t\n\tngOnDestroy() {\n\t\tthis.sub.unsubscribe();\t\t\t\t\t\t\t\t//end subscription\n\t}\n}\n"],"sourceRoot":""}